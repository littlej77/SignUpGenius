// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SignUpGenius.Models;

namespace SignUpGenius.Migrations
{
    [DbContext(typeof(SignUpGeniusContext))]
    [Migration("20220323231344_another")]
    partial class another
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("SignUpGenius.Models.FormResponse", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeSlotID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TourId");

                    b.HasIndex("TimeSlotID");

                    b.ToTable("FormResponses");

                    b.HasData(
                        new
                        {
                            TourId = 1,
                            Email = "kyliefromm@gmail.com",
                            GroupName = "Kylie",
                            GroupSize = 5,
                            Phone = "801-555-5555",
                            TimeSlotID = 1
                        });
                });

            modelBuilder.Entity("SignUpGenius.Models.TimeSlot", b =>
                {
                    b.Property<int>("TimeSlotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Taken")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TourTime")
                        .HasColumnType("TEXT");

                    b.HasKey("TimeSlotID");

                    b.ToTable("TimeSlots");

                    b.HasData(
                        new
                        {
                            TimeSlotID = 1,
                            Taken = false,
                            TourTime = "8AM"
                        },
                        new
                        {
                            TimeSlotID = 2,
                            Taken = false,
                            TourTime = "9AM"
                        },
                        new
                        {
                            TimeSlotID = 3,
                            Taken = false,
                            TourTime = "10AM"
                        },
                        new
                        {
                            TimeSlotID = 4,
                            Taken = false,
                            TourTime = "11AM"
                        },
                        new
                        {
                            TimeSlotID = 5,
                            Taken = false,
                            TourTime = "12PM"
                        },
                        new
                        {
                            TimeSlotID = 6,
                            Taken = false,
                            TourTime = "1PM"
                        },
                        new
                        {
                            TimeSlotID = 7,
                            Taken = false,
                            TourTime = "2PM"
                        },
                        new
                        {
                            TimeSlotID = 8,
                            Taken = false,
                            TourTime = "4PM"
                        },
                        new
                        {
                            TimeSlotID = 9,
                            Taken = false,
                            TourTime = "5PM"
                        },
                        new
                        {
                            TimeSlotID = 10,
                            Taken = false,
                            TourTime = "6PM"
                        },
                        new
                        {
                            TimeSlotID = 11,
                            Taken = false,
                            TourTime = "7PM"
                        },
                        new
                        {
                            TimeSlotID = 12,
                            Taken = false,
                            TourTime = "8PM"
                        });
                });

            modelBuilder.Entity("SignUpGenius.Models.FormResponse", b =>
                {
                    b.HasOne("SignUpGenius.Models.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
