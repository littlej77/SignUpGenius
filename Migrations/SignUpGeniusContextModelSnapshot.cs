// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SignUpGenius.Models;

namespace SignUpGenius.Migrations
{
    [DbContext(typeof(SignUpGeniusContext))]
    partial class SignUpGeniusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("SignUpGenius.Models.FormResponse", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeSlotID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TourId");

                    b.HasIndex("TimeSlotID");

                    b.ToTable("FormResponses");
                });

            modelBuilder.Entity("SignUpGenius.Models.TimeSlot", b =>
                {
                    b.Property<int>("TimeSlotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Taken")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TourTime")
                        .HasColumnType("TEXT");

                    b.HasKey("TimeSlotID");

                    b.ToTable("TimeSlots");
                });

            modelBuilder.Entity("SignUpGenius.Models.FormResponse", b =>
                {
                    b.HasOne("SignUpGenius.Models.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
